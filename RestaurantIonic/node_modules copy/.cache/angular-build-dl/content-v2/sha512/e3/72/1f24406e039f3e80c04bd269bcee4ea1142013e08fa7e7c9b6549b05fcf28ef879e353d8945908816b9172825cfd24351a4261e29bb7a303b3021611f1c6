{"version":3,"sources":["src/app/plat/modifier-plat/modifier-plat.page.html","src/app/plat/modifier-plat/modifier-plat-routing.module.ts","src/app/plat/modifier-plat/modifier-plat.module.ts","src/app/plat/modifier-plat/modifier-plat.page.scss","src/app/plat/modifier-plat/modifier-plat.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n  <ion-title>Modifier Plat </ion-title>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-back-button defaultHref=\\\"/tabs/plat\\\"></ion-back-button>\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (submit)=\\\"modifierPlat()\\\" *ngIf=\\\"plat\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label>Nom</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"nom\\\"></ion-input>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"formGroup.controls.nom.errors && formGroup.controls.nom.errors.required\\\">Obligatoire</ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"formGroup.controls.nom.errors && formGroup.controls.nom.errors.minlength\\\">Minimum 2 carat√®res</ion-text>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Prix</ion-label>\\n        <ion-input type=\\\"number\\\" formControlName=\\\"prix\\\"></ion-input>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"prixControl.hasError('required')\\\">Ce champ est obligatoire</ion-text>\\n\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Description</ion-label>\\n        <ion-textarea type=\\\"text\\\" formControlName=\\\"description\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Restaurant</ion-label>\\n        <ion-select [compareWith]=\\\"compareWith\\\" formControlName=\\\"restaurant\\\" >\\n          <ion-select-option *ngFor=\\\"let restaurant of restaurants\\\" value=\\\"{{restaurant.id}}\\\">{{restaurant.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-button type=\\\"submit\\\"> Sauvegarder </ion-button>\\n    </ion-list>\\n\\n  </form>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horiontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"list\\\"></ion-icon>\\n    </ion-fab-button> \\n    <ion-fab-list side=\\\"top\\\">\\n      <ion-fab-button color=\\\"primary\\\" routerLink=\\\"/tabs/plat/ajouter-plat\\\"><ion-icon name=\\\"add\\\"></ion-icon></ion-fab-button>\\n    </ion-fab-list>\\n    <ion-fab-list side=\\\"end\\\">\\n      <ion-fab-button color=\\\"secondary\\\" routerLink=\\\"/tabs/plat/ajouter-plat\\\"><ion-icon name=\\\"create\\\"></ion-icon></ion-fab-button>\\n    </ion-fab-list>\\n  </ion-fab>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ModifierPlatPage } from './modifier-plat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ModifierPlatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ModifierPlatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModifierPlatPageRoutingModule } from './modifier-plat-routing.module';\n\nimport { ModifierPlatPage } from './modifier-plat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ModifierPlatPageRoutingModule\n  ],\n  declarations: [ModifierPlatPage]\n})\nexport class ModifierPlatPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYXQvbW9kaWZpZXItcGxhdC9tb2RpZmllci1wbGF0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PlatService } from 'src/app/service/plat.service';\nimport { Plat } from 'src/app/Models/plat';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { UtilsService } from 'src/app/utils.service';\nimport { Restaurant } from '../../Models/restaurant';\n\n@Component({\n  selector: 'app-modifier-plat',\n  templateUrl: './modifier-plat.page.html',\n  styleUrls: ['./modifier-plat.page.scss'],\n})\nexport class ModifierPlatPage implements OnInit {\n  restaurants: Restaurant[];\n\n  platId : number;\n  plat: Plat;\n  formGroup: FormGroup;\n  nomControl: FormControl ;\n  prixControl: FormControl ;\n  descriptionControl: FormControl ;\n  restaurantControl: FormControl;\n\n  constructor(\n    private route : ActivatedRoute,\n    private service: PlatService,\n    private formBuilder: FormBuilder,\n    private nav: NavController,\n    private utils: UtilsService\n  ) {\n   \n    this.platId = Number(this.route.snapshot.paramMap.get('id'));\n    this.service.getPlat(this.platId).subscribe(plat=>{\n      this.plat= plat;\n      this.createForm();\n    })\n    console.log(\"Id=\"+this.platId);\n  }\n\n\n  createForm() {\n    this.nomControl = new FormControl(this.plat.nom,[Validators.required, Validators.minLength(2)]);\n    this.prixControl = new FormControl(this.plat.prix,[Validators.required]);\n    this.descriptionControl = new FormControl(this.plat.description);\n    this.restaurantControl = new FormControl(this.plat.restaurant, [Validators.required]);\n\n    this.formGroup=this.formBuilder.group({\n      nom: this.nomControl,\n      prix: this.prixControl,\n      description: this.descriptionControl,\n      restaurant : this.restaurantControl\n    });\n  }\n\n  ngOnInit() {\n    this.getRestaurants();\n  }\n  \n\n  modifierPlat(): void {\n    let infoPlat = new Plat();\n    infoPlat.id=this.platId;\n    infoPlat.nom= this.formGroup.get('nom').value;\n    infoPlat.prix= this.formGroup.get('prix').value;\n    infoPlat.description= this.formGroup.get('description').value;\n    infoPlat.restaurant = this.formGroup.get('restaurant').value;\n\n\n    console.log(this.formGroup.value);\n\n    this.service.updatePlat(infoPlat).subscribe(plat=>{\n      this.utils.presentToast(\"Plat modifi√© avec succ√©s\",\"success\");\n      this.nav.back();\n      console.log(plat);\n    },error=>{\n      this.utils.presentToast(\"Une erreur est survenue\",\"danger\");\n   })\n    \n  }\n\n  getRestaurants(): void {\n    this.service.getRestaurants().subscribe(restaurant => {\n      this.restaurants = restaurant;\n    },\n      error => {\n        this.utils.presentToast('Erreur survenue', 'danger');\n      });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"plat-modifier-plat-modifier-plat-module-es5.js"}